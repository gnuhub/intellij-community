package pkg;

public abstract class TestAnonymousClass {
   public static final Runnable R3 = new Runnable() {
      public void run() {
         boolean var1 = true;// 28
         boolean var2 = true;// 29
      }
   };
   public static final Runnable R = new Runnable() {
      public void run() {
         boolean var1 = true;// 45
         boolean var2 = true;// 46
      }
   };
   public static final Runnable R1 = new Runnable() {
      public void run() {
         boolean var1 = true;// 53
         boolean var2 = true;// 54
      }
   };
   private final TestAnonymousClass.InnerRecursive y = new TestAnonymousClass.InnerRecursive(new TestAnonymousClass.InnerRecursive((TestAnonymousClass.InnerRecursive)null) {
      void foo() {
         boolean var1 = true;// 75
         boolean var2 = true;// 76
         boolean var3 = true;// 77
      }
   }) {
      int v = 5;
      int t = 5;
      int j = 5;
      int o = 5;
   };
   private final TestAnonymousClass.InnerRecursive x = new TestAnonymousClass.InnerRecursive(new TestAnonymousClass.InnerRecursive((TestAnonymousClass.InnerRecursive)null) {
      void foo() {
         boolean var1 = true;// 90
         boolean var2 = true;// 91
         boolean var3 = true;// 92
      }
   }) {
      int v = 5;
      int t = 5;
      int j = 5;
      int o = 5;
   };

   void foo(int var1) throws Exception {
      if(var1 > 0) {// 10
         TestAnonymousClass.I var2 = new TestAnonymousClass.I() {
            public void foo() throws Exception {
               boolean var1 = true;// 13
               boolean var2 = true;// 14
            }
         };// 11
         var2.foo();// 17
      } else {
         System.out.println(5);// 21
      }

   }

   void boo() {
      boolean var1 = true;// 35
   }

   void zoo() {
      boolean var1 = true;// 39
   }

   static class InnerRecursive {
      TestAnonymousClass.InnerRecursive r;

      public InnerRecursive(TestAnonymousClass.InnerRecursive var1) {
         this.r = var1;// 105
      }

      void foo() {
      }
   }

   private static class Inner {
      private static Runnable R_I = new Runnable() {
         public void run() {
            boolean var1 = true;// 66
            boolean var2 = true;// 67
         }
      };
   }

   interface I {
      void foo() throws Exception;
   }
}

class 'pkg/TestAnonymousClass$2' {
   method 'run ()V' {
      0      5
      1      5
      2      6
      3      6
   }
}

class 'pkg/TestAnonymousClass$3' {
   method 'run ()V' {
      0      11
      1      11
      2      12
      3      12
   }
}

class 'pkg/TestAnonymousClass$4' {
   method 'run ()V' {
      0      17
      1      17
      2      18
      3      18
   }
}

class 'pkg/TestAnonymousClass$5' {
   method 'foo ()V' {
      0      23
      1      23
      2      24
      3      24
      4      25
      5      25
   }
}

class 'pkg/TestAnonymousClass$7' {
   method 'foo ()V' {
      0      35
      1      35
      2      36
      3      36
      4      37
      5      37
   }
}

class 'pkg/TestAnonymousClass$1' {
   method 'foo ()V' {
      0      50
      1      50
      2      51
      3      51
   }
}

class 'pkg/TestAnonymousClass' {
   method 'foo (I)V' {
      1      47
      c      53
      e      54
      16      56
      19      56
      1a      56
   }

   method 'boo ()V' {
      0      62
      1      62
   }

   method 'zoo ()V' {
      0      66
      1      66
   }
}

class 'pkg/TestAnonymousClass$InnerRecursive' {
   method '<init> (Lpkg/TestAnonymousClass$InnerRecursive;)V' {
      6      73
   }
}

class 'pkg/TestAnonymousClass$Inner$1' {
   method 'run ()V' {
      0      83
      1      83
      2      84
      3      84
   }
}

Lines mapping:
10 <-> 48
11 <-> 54
13 <-> 51
14 <-> 52
17 <-> 55
21 <-> 57
28 <-> 6
29 <-> 7
35 <-> 63
39 <-> 67
45 <-> 12
46 <-> 13
53 <-> 18
54 <-> 19
66 <-> 84
67 <-> 85
75 <-> 24
76 <-> 25
77 <-> 26
90 <-> 36
91 <-> 37
92 <-> 38
105 <-> 74
