/*
 * Copyright 2000-2015 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.jetbrains.commandInterface.gnuCommandLine.psi.impl;

import com.intellij.psi.PsiElement;
import com.jetbrains.commandInterface.gnuCommandLine.psi.CommandLineOption;
import org.jetbrains.annotations.NonNls;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * Class to be used by autogenerated PSI elements to delegate logic
 *
 * @author Ilya.Kazakevich
 */
final class CommandLinePsiImplUtils {


  private CommandLinePsiImplUtils() {
  }

  /**
   * Checks if option is long (--long-option vs -s)
   *
   * @param o option
   * @return true if long
   */
  static boolean isLong(@NotNull final CommandLineOption o) {
    return o.getLongOptionNameToken() != null;
  }

  /**
   * Returns option name regardless it is long or short.
   *
   * @param o option
   * @return name (if any)
   */
  @Nullable
  @NonNls
  static String getOptionName(@NotNull final CommandLineOption o) {
    final PsiElement longNameToken = o.getLongOptionNameToken();
    if (longNameToken != null) {
      return longNameToken.getText();
    }
    final PsiElement shortOptionNameToken = o.getShortOptionNameToken();
    if (shortOptionNameToken != null) {
      return shortOptionNameToken.getText();
    }
    return null;
  }
}
